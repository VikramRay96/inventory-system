// Code generated by MockGen. DO NOT EDIT.
// Source: inventory-system/inventory-service/internal/adapters/repository (interfaces: IInventoryConfigurationRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	dto "inventory-system/common/pkg/dto"
	dto0 "inventory-system/inventory-service/internal/common/dto"
	request_dto "inventory-system/inventory-service/internal/common/dto/request_dto"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIInventoryConfigurationRepository is a mock of IInventoryConfigurationRepository interface.
type MockIInventoryConfigurationRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIInventoryConfigurationRepositoryMockRecorder
}

// MockIInventoryConfigurationRepositoryMockRecorder is the mock recorder for MockIInventoryConfigurationRepository.
type MockIInventoryConfigurationRepositoryMockRecorder struct {
	mock *MockIInventoryConfigurationRepository
}

// NewMockIInventoryConfigurationRepository creates a new mock instance.
func NewMockIInventoryConfigurationRepository(ctrl *gomock.Controller) *MockIInventoryConfigurationRepository {
	mock := &MockIInventoryConfigurationRepository{ctrl: ctrl}
	mock.recorder = &MockIInventoryConfigurationRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIInventoryConfigurationRepository) EXPECT() *MockIInventoryConfigurationRepositoryMockRecorder {
	return m.recorder
}

// CreateNewConfiguration mocks base method.
func (m *MockIInventoryConfigurationRepository) CreateNewConfiguration(arg0 context.Context, arg1 request_dto.CreateNewConfigurationRequestBody) *dto.ErrorResponseDto {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNewConfiguration", arg0, arg1)
	ret0, _ := ret[0].(*dto.ErrorResponseDto)
	return ret0
}

// CreateNewConfiguration indicates an expected call of CreateNewConfiguration.
func (mr *MockIInventoryConfigurationRepositoryMockRecorder) CreateNewConfiguration(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNewConfiguration", reflect.TypeOf((*MockIInventoryConfigurationRepository)(nil).CreateNewConfiguration), arg0, arg1)
}

// DeleteInventoryConfigurationByName mocks base method.
func (m *MockIInventoryConfigurationRepository) DeleteInventoryConfigurationByName(arg0 context.Context, arg1 string) *dto.ErrorResponseDto {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteInventoryConfigurationByName", arg0, arg1)
	ret0, _ := ret[0].(*dto.ErrorResponseDto)
	return ret0
}

// DeleteInventoryConfigurationByName indicates an expected call of DeleteInventoryConfigurationByName.
func (mr *MockIInventoryConfigurationRepositoryMockRecorder) DeleteInventoryConfigurationByName(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteInventoryConfigurationByName", reflect.TypeOf((*MockIInventoryConfigurationRepository)(nil).DeleteInventoryConfigurationByName), arg0, arg1)
}

// FetchAllInventoryConfiguration mocks base method.
func (m *MockIInventoryConfigurationRepository) FetchAllInventoryConfiguration(arg0 context.Context) ([]dto0.InventoryConfiguration, *dto.ErrorResponseDto) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchAllInventoryConfiguration", arg0)
	ret0, _ := ret[0].([]dto0.InventoryConfiguration)
	ret1, _ := ret[1].(*dto.ErrorResponseDto)
	return ret0, ret1
}

// FetchAllInventoryConfiguration indicates an expected call of FetchAllInventoryConfiguration.
func (mr *MockIInventoryConfigurationRepositoryMockRecorder) FetchAllInventoryConfiguration(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchAllInventoryConfiguration", reflect.TypeOf((*MockIInventoryConfigurationRepository)(nil).FetchAllInventoryConfiguration), arg0)
}

// FetchInventoryConfigurationByName mocks base method.
func (m *MockIInventoryConfigurationRepository) FetchInventoryConfigurationByName(arg0 context.Context, arg1 string) (*dto0.InventoryConfiguration, *dto.ErrorResponseDto) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchInventoryConfigurationByName", arg0, arg1)
	ret0, _ := ret[0].(*dto0.InventoryConfiguration)
	ret1, _ := ret[1].(*dto.ErrorResponseDto)
	return ret0, ret1
}

// FetchInventoryConfigurationByName indicates an expected call of FetchInventoryConfigurationByName.
func (mr *MockIInventoryConfigurationRepositoryMockRecorder) FetchInventoryConfigurationByName(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchInventoryConfigurationByName", reflect.TypeOf((*MockIInventoryConfigurationRepository)(nil).FetchInventoryConfigurationByName), arg0, arg1)
}
