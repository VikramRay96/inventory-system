// Code generated by MockGen. DO NOT EDIT.
// Source: inventory-system/inventory-service/internal/adapters/repository (interfaces: IInventoryRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	dto "inventory-system/common/pkg/dto"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	primitive "go.mongodb.org/mongo-driver/bson/primitive"
)

// MockIInventoryRepository is a mock of IInventoryRepository interface.
type MockIInventoryRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIInventoryRepositoryMockRecorder
}

// MockIInventoryRepositoryMockRecorder is the mock recorder for MockIInventoryRepository.
type MockIInventoryRepositoryMockRecorder struct {
	mock *MockIInventoryRepository
}

// NewMockIInventoryRepository creates a new mock instance.
func NewMockIInventoryRepository(ctrl *gomock.Controller) *MockIInventoryRepository {
	mock := &MockIInventoryRepository{ctrl: ctrl}
	mock.recorder = &MockIInventoryRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIInventoryRepository) EXPECT() *MockIInventoryRepositoryMockRecorder {
	return m.recorder
}

// CreateNewInventoryGivenInventoryName mocks base method.
func (m *MockIInventoryRepository) CreateNewInventoryGivenInventoryName(arg0 context.Context, arg1 interface{}, arg2 string) *dto.ErrorResponseDto {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNewInventoryGivenInventoryName", arg0, arg1, arg2)
	ret0, _ := ret[0].(*dto.ErrorResponseDto)
	return ret0
}

// CreateNewInventoryGivenInventoryName indicates an expected call of CreateNewInventoryGivenInventoryName.
func (mr *MockIInventoryRepositoryMockRecorder) CreateNewInventoryGivenInventoryName(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNewInventoryGivenInventoryName", reflect.TypeOf((*MockIInventoryRepository)(nil).CreateNewInventoryGivenInventoryName), arg0, arg1, arg2)
}

// FetchInventory mocks base method.
func (m *MockIInventoryRepository) FetchInventory(arg0 context.Context, arg1, arg2, arg3 string) (primitive.M, *dto.ErrorResponseDto) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchInventory", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(primitive.M)
	ret1, _ := ret[1].(*dto.ErrorResponseDto)
	return ret0, ret1
}

// FetchInventory indicates an expected call of FetchInventory.
func (mr *MockIInventoryRepositoryMockRecorder) FetchInventory(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchInventory", reflect.TypeOf((*MockIInventoryRepository)(nil).FetchInventory), arg0, arg1, arg2, arg3)
}
