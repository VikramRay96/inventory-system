// Code generated by MockGen. DO NOT EDIT.
// Source: inventory-system/inventory-service/internal/adapters/client (interfaces: IMongoStorageManager)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	dto "inventory-system/common/pkg/dto"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	primitive "go.mongodb.org/mongo-driver/bson/primitive"
)

// MockIMongoStorageManager is a mock of IMongoStorageManager interface.
type MockIMongoStorageManager struct {
	ctrl     *gomock.Controller
	recorder *MockIMongoStorageManagerMockRecorder
}

// MockIMongoStorageManagerMockRecorder is the mock recorder for MockIMongoStorageManager.
type MockIMongoStorageManagerMockRecorder struct {
	mock *MockIMongoStorageManager
}

// NewMockIMongoStorageManager creates a new mock instance.
func NewMockIMongoStorageManager(ctrl *gomock.Controller) *MockIMongoStorageManager {
	mock := &MockIMongoStorageManager{ctrl: ctrl}
	mock.recorder = &MockIMongoStorageManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIMongoStorageManager) EXPECT() *MockIMongoStorageManagerMockRecorder {
	return m.recorder
}

// CreateCollection mocks base method.
func (m *MockIMongoStorageManager) CreateCollection(arg0 context.Context, arg1 string, arg2 primitive.M, arg3 []string) *dto.ErrorResponseDto {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCollection", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*dto.ErrorResponseDto)
	return ret0
}

// CreateCollection indicates an expected call of CreateCollection.
func (mr *MockIMongoStorageManagerMockRecorder) CreateCollection(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCollection", reflect.TypeOf((*MockIMongoStorageManager)(nil).CreateCollection), arg0, arg1, arg2, arg3)
}
