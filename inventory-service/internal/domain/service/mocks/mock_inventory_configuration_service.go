// Code generated by MockGen. DO NOT EDIT.
// Source: inventory-system/inventory-service/internal/domain/service (interfaces: IInventoryConfigurationService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	dto "inventory-system/common/pkg/dto"
	request_dto "inventory-system/inventory-service/internal/common/dto/request_dto"
	response_dto "inventory-system/inventory-service/internal/common/dto/response_dto"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIInventoryConfigurationService is a mock of IInventoryConfigurationService interface.
type MockIInventoryConfigurationService struct {
	ctrl     *gomock.Controller
	recorder *MockIInventoryConfigurationServiceMockRecorder
}

// MockIInventoryConfigurationServiceMockRecorder is the mock recorder for MockIInventoryConfigurationService.
type MockIInventoryConfigurationServiceMockRecorder struct {
	mock *MockIInventoryConfigurationService
}

// NewMockIInventoryConfigurationService creates a new mock instance.
func NewMockIInventoryConfigurationService(ctrl *gomock.Controller) *MockIInventoryConfigurationService {
	mock := &MockIInventoryConfigurationService{ctrl: ctrl}
	mock.recorder = &MockIInventoryConfigurationServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIInventoryConfigurationService) EXPECT() *MockIInventoryConfigurationServiceMockRecorder {
	return m.recorder
}

// CreateNewConfiguration mocks base method.
func (m *MockIInventoryConfigurationService) CreateNewConfiguration(arg0 context.Context, arg1 request_dto.CreateNewConfigurationRequestBody) *dto.ErrorResponseDto {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNewConfiguration", arg0, arg1)
	ret0, _ := ret[0].(*dto.ErrorResponseDto)
	return ret0
}

// CreateNewConfiguration indicates an expected call of CreateNewConfiguration.
func (mr *MockIInventoryConfigurationServiceMockRecorder) CreateNewConfiguration(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNewConfiguration", reflect.TypeOf((*MockIInventoryConfigurationService)(nil).CreateNewConfiguration), arg0, arg1)
}

// DeleteInventoryConfiguration mocks base method.
func (m *MockIInventoryConfigurationService) DeleteInventoryConfiguration(arg0 context.Context, arg1 string) *dto.ErrorResponseDto {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteInventoryConfiguration", arg0, arg1)
	ret0, _ := ret[0].(*dto.ErrorResponseDto)
	return ret0
}

// DeleteInventoryConfiguration indicates an expected call of DeleteInventoryConfiguration.
func (mr *MockIInventoryConfigurationServiceMockRecorder) DeleteInventoryConfiguration(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteInventoryConfiguration", reflect.TypeOf((*MockIInventoryConfigurationService)(nil).DeleteInventoryConfiguration), arg0, arg1)
}

// GetAllInventoryConfiguration mocks base method.
func (m *MockIInventoryConfigurationService) GetAllInventoryConfiguration(arg0 context.Context) ([]response_dto.InventoryConfigurationResponseDto, *dto.ErrorResponseDto) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllInventoryConfiguration", arg0)
	ret0, _ := ret[0].([]response_dto.InventoryConfigurationResponseDto)
	ret1, _ := ret[1].(*dto.ErrorResponseDto)
	return ret0, ret1
}

// GetAllInventoryConfiguration indicates an expected call of GetAllInventoryConfiguration.
func (mr *MockIInventoryConfigurationServiceMockRecorder) GetAllInventoryConfiguration(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllInventoryConfiguration", reflect.TypeOf((*MockIInventoryConfigurationService)(nil).GetAllInventoryConfiguration), arg0)
}

// GetInventoryConfiguration mocks base method.
func (m *MockIInventoryConfigurationService) GetInventoryConfiguration(arg0 context.Context, arg1 string) (*response_dto.InventoryConfigurationResponseDto, *dto.ErrorResponseDto) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInventoryConfiguration", arg0, arg1)
	ret0, _ := ret[0].(*response_dto.InventoryConfigurationResponseDto)
	ret1, _ := ret[1].(*dto.ErrorResponseDto)
	return ret0, ret1
}

// GetInventoryConfiguration indicates an expected call of GetInventoryConfiguration.
func (mr *MockIInventoryConfigurationServiceMockRecorder) GetInventoryConfiguration(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInventoryConfiguration", reflect.TypeOf((*MockIInventoryConfigurationService)(nil).GetInventoryConfiguration), arg0, arg1)
}
